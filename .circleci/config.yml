version: 2

steps:
  - &build_dependencies
    run:
      name: install dependencies
      command: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y tzdata gcc pkg-config libssl-dev libxml2-dev libyaml-dev libgmp-dev git make && \
        apt-get install -y libpcre3-dev libevent-dev
        apt-get install -y libssh2-1-dev liblzma-dev libicu-dev

        # For FPM to build a package
        apt-get install -y ruby ruby-dev
        gem install fpm --no-ri --no-rdoc

jobs:
  test:
    parallelism: 1
    docker:
      - image: crystallang/crystal:0.24.2
        environment:
          KEMAL_ENV: test
    steps:
      - checkout
      - run:
          name: Install shards
          command: |
            shards
      - run:
          name: Spec
          command: |
            crystal spec

  merge_to_master:
    docker:
      - image: rainforestapp/circlemator:latest
    steps:
      - run:
          name: Merge to master
          command: circlemator self-merge --base-branch=master --compare-branch=develop

  deploy_stg:
    docker:
      - image: rainforestapp/heroku-deploy:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "20:ba:56:70:88:ec:9e:ea:32:b6:e3:2f:07:1c:67:29"
      - run:
          name: Deploy to staging
          command: /scripts/deploy.sh keko-stg
          no_output_timeout: 15m

  deploy_prd:
    docker:
      - image: rainforestapp/heroku-deploy:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "20:ba:56:70:88:ec:9e:ea:32:b6:e3:2f:07:1c:67:29"
      - run:
          name: Deploy to production
          command: /scripts/deploy.sh keko-prd
          no_output_timeout: 15m

  build:
    docker:
      - image: ubuntu:bionic
    working_directory: /home/keko
    steps:
      - *build_dependencies
      - checkout
      - run: dpkg -i --force-bad-version /home/keko/docker/*.deb
      - run:
          name: Fetch Keko dependencies
          command: shards install
      - run:
          name: Build Keko
          command: |
            shards build \
              --link-flags "-l:libssh2.a -l:libssl.a -l:libgcrypt.a -l:libgpg-error.a -l:libcrypto.a" \
              --link-flags "-l:libxml2.a -l:libicuuc.a -l:libicudata.a -l:liblzma.a -l:libstdc++.a -l:libz.a" \
              --link-flags "-l:libevent.a -lrt -lpthread"
      - run:
          name: Build Debian Package
          command: |
            cd /home/keko/bin
            fpm \
              -t deb                                          \
              -s dir                                          \
              -n keko-dev                                     \
              -v $CIRCLE_BUILD_NUM                            \
              --url http://www.github.com/rainforestapp/keko  \
              --prefix /usr/bin                               \
              keko
      - persist_to_workspace:
          root: /home/keko/bin/
          paths: .
      - store_artifacts:
          path: /home/keko/bin/
          destination: /

  publish:
    docker:
      - image: circleci/ruby:2.5.3-node
    working_directory: /tmp/keko/
    steps:
      - attach_workspace:
          at: /tmp/keko/
      - run:
          name: upload .deb file
          command: |
            #curl -F p1=@$(ls *.deb | head -n1) https://push.fury.io/5xqfNgxSP9zLJf87MC3k/
            #curl -F p1=@$(ls *.deb | head -n1) https://${GEMFURY_TOKEN}@push.fury.io/opsrfqa/

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - deploy_stg:
          filters:
            branches:
              only:
                - develop
      - deploy_prd:
          filters:
            branches:
              only:
                - master
      - test:
          filters:
            branches:
              ignore:
                - master
      - merge_to_master:
          requires:
            - deploy_stg
            - test
          filters:
            branches:
              only:
                - develop
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - master
